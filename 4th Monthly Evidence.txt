1. Create a function called tax_amount to calculate the tax of employees. 
Use SQL statement to show all the employees empno, salary and tax.

-- Create FUNCTION
CREATE OR REPLACE FUNCTION tax_amount (p_salary NUMBER)
RETURN NUMBER IS
BEGIN
RETURN ((p_salary * 10) / 100);
END;
/

-- SQL to Invoke Function
SELECT employee_id empno, salary, tax_amount(salary) tax
FROM employees;


2. Create a PROCEDURE to OUTPUT a welcome message with your name when invoked.

-- Create Procedure
CREATE OR REPLACE PROCEDURE welcome_msg
(p_txt VARCHAR2) IS
BEGIN
DBMS_OUTPUT.put_line ('Welcome Mr. ' || p_txt);
END;
/

-- Invoke Procedure
EXECUTE welcome_msg('Example Name');


3. Create a trigger that prevents certain events. Such as the salary of a employee from
'IT_PROG' cannot be 20,000. 

-- Create TRIGGER
CREATE OR REPLACE TRIGGER salary_trg
BEFORE INSERT OR UPDATE OF salary ON employees
FOR EACH ROW
BEGIN
IF (:NEW.salary > 20000) AND (:NEW.job_id = 'IT_PROG') THEN
RAISE_APPLICATION_ERROR (-20211, 'Salary of IT_PROG can not be more than 20000');
END IF;
END;    
/

-- Check TRIGGER
UPDATE employees
SET salary = 21000
WHERE employee_id = 103;

-- Show the job_id of test data
SELECT job_id FROM employees
WHERE employee_id = 103;







